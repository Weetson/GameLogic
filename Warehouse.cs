using System;
using System.Collections.Generic;
using System.Linq;

public class Warehouse
{
    // –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –¥–æ—Å—Ç–∞–≤–æ–∫ (—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤)
    public List<List<Item>> Deliveries { get; set; } = new();

    // –í—Å–µ —è—á–µ–π–∫–∏ —Å–∫–ª–∞–¥–∞
    public List<Cell> Cells { get; set; }

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∫–ª–∞–¥–∞ ‚Äî —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞—ë–º 30 –ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫
    public Warehouse()
    {
        Cells = new List<Cell>();

        for (int i = 1; i <= 100; i++)  // 30 —è—á–µ–µ–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º Id –æ—Ç 1 –¥–æ 30
        {
            Cells.Add(new Cell
            {
                Id = i,
                Capacity = 7  // –ú–∞–∫—Å–∏–º—É–º 5 —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —è—á–µ–π–∫—É (–º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å)
            });
        }
    }

    // –ú–µ—Ç–æ–¥ –ø—Ä–∏—ë–º–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏ (—Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å)
    public void AcceptDelivery(List<Item> delivery)
    {
        Console.WriteLine($"üöö –ù–æ–≤–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞: {delivery.Count} —Ç–æ–≤–∞—Ä–æ–≤.");

        var rand = new Random();  // –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —è—á–µ–µ–∫
        int current = 0;          // —Å—á—ë—Ç—á–∏–∫ –ø—Ä–∏–Ω—è—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞

        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É –≤ –¥–æ—Å—Ç–∞–≤–∫–µ
        foreach (var item in delivery)
        {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–æ–≤–∞—Ä—É
            Console.WriteLine($"\nüì¶ –ü—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä {current + 1}/{delivery.Count}:");
            Console.WriteLine($"–ê—Ä—Ç–∏–∫—É–ª: {item.Article}, –ù–∞–∑–≤–∞–Ω–∏–µ: {item.Name}");

            // –ü—Ä–æ—Å–∏–º –Ω–∞–∂–∞—Ç—å Enter –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞
            Console.Write("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–∏—ë–º–∫–∏ (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞): ");
            var input = Console.ReadLine();

            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª 'q' ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            if (input == "q")
            {
                Console.WriteLine("‚õî –ü—Ä–∏—ë–º–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.");
                break;
            }

            // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —è—á–µ–µ–∫, —á—Ç–æ–±—ã –≤—ã–±–æ—Ä –±—ã–ª —Å–ª—É—á–∞–π–Ω—ã–º
            var shuffled = Cells.OrderBy(_ => rand.Next()).ToList();

            // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –Ω–µ–ø–æ–ª–Ω—É—é —è—á–µ–π–∫—É –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
            var targetCell = shuffled.FirstOrDefault(c => !c.IsFull);

            // –ï—Å–ª–∏ –≤—Å–µ —è—á–µ–π–∫–∏ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã ‚Äî –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –∏ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–∏—ë–º–∫—É
            if (targetCell == null)
            {
                Console.WriteLine("‚ùå –í—Å–µ —è—á–µ–π–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!");
                break;
            }

            // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ç–æ–≤–∞—Ä—É –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å "–ø—Ä–∏–Ω—è—Ç"
            item.CellId = targetCell.Id;
            item.isAccepted = true;

            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —ç—Ç–æ–π —è—á–µ–π–∫–∏
            targetCell.Items.Add(item);

            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏
            Console.WriteLine($"‚úÖ –¢–æ–≤–∞—Ä –ø—Ä–∏–Ω—è—Ç. –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —è—á–µ–π–∫–∞ ‚Ññ{targetCell.Id}");

            current++;  // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É –¥–æ—Å—Ç–∞–≤–∫—É –≤ –∏—Å—Ç–æ—Ä–∏—é (–¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)
        Deliveries.Add(delivery);

        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        Console.WriteLine($"\nüì¶ –ü—Ä–∏–µ–º–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ –ø—Ä–∏–Ω—è—Ç–æ: {current}");
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è "–∑–∞–±–æ—Ä–∞" –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º clientId
    // –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ‚Äî —ç—Ç–æ –¥–ª—è –±—É–¥—É—â–µ–π –ª–æ–≥–∏–∫–∏ NPC
    public void PickupItem(int clientId)
    {
        foreach (var cell in Cells)
        {
            // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã, —á–µ–π ClientId —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            cell.Items.RemoveAll(i => i.ClientId == clientId);
        }
    }
}
